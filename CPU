 #include<stdio.h>

  struct Process {
    char name[3];
    int burstTime;
    int priority;
};

 void priorityScheduling(struct Process processes[], int n) {
    int waitingTime[n], turnaroundTime[n];
    int i, j;

     for (i = 0; i < n - 1; i++) {
        for (j = 0; j < n - i - 1; j++) {
            if (processes[j].priority > processes[j + 1].priority) {
                struct Process temp = processes[j];
                processes[j] = processes[j + 1];
                processes[j + 1] = temp;
            }
        }
    }

     waitingTime[0] = 0;
    for (i = 1; i < n; i++) {
        waitingTime[i] = processes[i - 1].burstTime + waitingTime[i - 1];
    }

     for (i = 0; i < n; i++) {
        turnaroundTime[i] = processes[i].burstTime + waitingTime[i];
    }

     float avgWaitingTime = 0, avgTurnaroundTime = 0;
    for (i = 0; i < n; i++) {
        avgWaitingTime += waitingTime[i];
        avgTurnaroundTime += turnaroundTime[i];
    }
    avgWaitingTime /= n;
    avgTurnaroundTime /= n;

     printf("Average Waiting Time: %.2f\n", avgWaitingTime);
    printf("Average Turnaround Time: %.2f\n", avgTurnaroundTime);
}

int main() {
     struct Process processes[] = {
        {"P1", 30, 2},
        {"P2", 5, 1},
        {"P3", 12, 3}
    };
    int n = sizeof(processes) / sizeof(processes[0]);

     priorityScheduling(processes, n);

    return 0;
}
